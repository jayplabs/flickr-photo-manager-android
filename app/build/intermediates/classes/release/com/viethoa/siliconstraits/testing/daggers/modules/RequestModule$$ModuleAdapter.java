// Code generated by dagger-compiler.  Do not edit.
package com.viethoa.siliconstraits.testing.daggers.modules;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class RequestModule$$ModuleAdapter extends ModuleAdapter<RequestModule> {
  private static final String[] INJECTS = { "com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public RequestModule$$ModuleAdapter() {
    super(com.viethoa.siliconstraits.testing.daggers.modules.RequestModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, false /*complete*/, true /*library*/);
  }

  @Override
  public RequestModule newModule() {
    return new com.viethoa.siliconstraits.testing.daggers.modules.RequestModule();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, RequestModule module) {
    bindings.contributeProvidesBinding("com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager", new ProvidesFlickrManagerProvidesAdapter(module));
  }

  /**
   * A {@code Binding<com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvidesFlickrManagerProvidesAdapter extends ProvidesBinding<com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager>
      implements Provider<com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager> {
    private final RequestModule module;

    public ProvidesFlickrManagerProvidesAdapter(RequestModule module) {
      super("com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager", IS_SINGLETON, "com.viethoa.siliconstraits.testing.daggers.modules.RequestModule", "providesFlickrManager");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager>}.
     */
    @Override
    public com.viethoa.siliconstraits.testing.daggers.managers.FlickrManager get() {
      return module.providesFlickrManager();
    }
  }
}
